import React, { useEffect, useState } from "react";

import PopularList from "../../components/Pages/PopularList";
import Navbar from "../../components/Navbar";
import { Pagination } from "@mui/material";
import CustomPagination from "../../components/Pagination/CustomPagination";
import SimpleBottomNavigation from "../../components/BottomNav";
import Head from "next/head";

const movies = ({ movies, totalPages = 500 }) => {
  const [content, setContent] = useState([]);
  const [page, setPage] = useState(1);
  const [numOfPages, setNumOfPages] = useState();
  const fetchMovie = async () => {
    try {
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization:
            "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTczNDlhMDRkNzE2ZWRhZGM2ZDk4OTRiY2Y4ZTUzMiIsInN1YiI6IjY0MGQ4ZjI0ZTE4ZTNmMDg0MDNhMzg3OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFAFJTiKlBfyiftvzqG6AD3kKL5r1gn0qmG3bgWr7ro",
        },
      };

      const res = await fetch(
        `https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.NEXT_PUBLIC_API_KEY}&page=${page}`,
        options
      );
      const data = await res.json();
      setContent(data.results);
      setNumOfPages(data.total_pages);
    } catch (error) {
      console.error(error);
    }
  };

  useEffect(() => {
    window.scroll(0, 0);
    fetchMovie();
  }, [page]);

  return (
    <>
      <Head>
        <title>Myflix-new&popular</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/micon.ico" />
      </Head>
      <Navbar />

      <div className="space-y-10 md:space-y-10 mb-7  ">
        <h1 className=" text-center mt-20 text-[23px] ">New & Popular</h1>
        <div className=" grid grid-cols-2 gap-5 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6  items-center mt-20 lg:px-5 px-5  ">
          {content.map((movie) => (
            <PopularList
              key={movie.id}
              moviename={movie.title || movie.name}
              moviePost={movie.poster_path || movie.backdrop_path}
              movieid={movie.id}
              movieoverview={movie.overview}
              movieDate={movie.release_date}
              movieRating={movie.vote_average}
              mediaType={movie.media_type}
            />
          ))}
        </div>
        {numOfPages > 1 && (
          <CustomPagination totalPages={totalPages} setPage={setPage} />
        )}
      </div>
      <div className=" mt-16">
        <SimpleBottomNavigation />
      </div>
    </>
  );
};

export default movies;

export async function getServerSideProps({ query }) {
  const options = {
    method: "GET",
    headers: {
      accept: "application/json",
      Authorization:
        "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTczNDlhMDRkNzE2ZWRhZGM2ZDk4OTRiY2Y4ZTUzMiIsInN1YiI6IjY0MGQ4ZjI0ZTE4ZTNmMDg0MDNhMzg3OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFAFJTiKlBfyiftvzqG6AD3kKL5r1gn0qmG3bgWr7ro",
    },
  };

  const page = query.page || 1;
  const genre = query.genre || "fetchTrending";

  try {
    const res = await fetch(
      `https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.NEXT_PUBLIC_API_KEY}&page=${page}`,
      options
    );
    const data = await res.json();

    return {
      props: {
        movies: data.results,
        totalPages: data.total_pages,
      },
    };
  } catch (error) {
    console.error(error);
    return {
      props: {
        movies: [],
        totalPages: 1,
      },
    };
  }
}
