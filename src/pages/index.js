import Head from "next/head";
import Hero from "../../components/Hero";
import Row from "../../components/Row";


export default function Home({
  trending,
  topRated,
  popular,
  tvPopular,
  tvtopRated,
  documentaries,
}) {
  return (
    <>
      <div className="relative  bg-gradient-to-b from-[#000022]/5 to-[#000000]  ">
        <Head>
          <title>Myflix</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/micon.ico" />
        </Head>
        <main>
          <Hero movieposter={trending} />
          <Row title="Trending Now" movies={trending} />
          <Row title="Top Rated Movies" movies={topRated} />
          <Row title="Popular Movies" movies={popular} />
          <Row title="Popular Series " movies={tvPopular} />
          <Row title="Top Rated Series" movies={tvtopRated} />
          <Row title="Documentaries" movies={documentaries} />
        </main>
      </div>
    </>
  );
}

export async function getServerSideProps() {
  const options = {
    method: "GET",
    headers: {
      accept: "application/json",
      Authorization:
        "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTczNDlhMDRkNzE2ZWRhZGM2ZDk4OTRiY2Y4ZTUzMiIsInN1YiI6IjY0MGQ4ZjI0ZTE4ZTNmMDg0MDNhMzg3OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFAFJTiKlBfyiftvzqG6AD3kKL5r1gn0qmG3bgWr7ro",
    },
  };

  try {
    const [
      trendingRes,
      topRatedRes,
      popularRes,
      tvPopularRes,
      tvTopRatedRes,
      documentariesRes,
    ] = await Promise.all([
      fetch(
        "https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.NEXT_PUBLIC_API_KEY}",
        options
      ),
      fetch(
        "https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.NEXT_PUBLIC_API_KEY}&page=1",
        options
      ),
      fetch(
        "https://api.themoviedb.org/3/movie/popular?api_key=${process.env.NEXT_PUBLIC_API_KEY}&page=1",
        options
      ),
      fetch(
        "https://api.themoviedb.org/3/tv/popular?api_key=${process.env.NEXT_PUBLIC_API_KEY}&page=1",
        options
      ),
      fetch(
        "https://api.themoviedb.org/3/tv/top_rated?api_key=${process.env.NEXT_PUBLIC_API_KEY}&page=1",
        options
      ),
      fetch(
        "https://api.themoviedb.org/3/discover/movie?api_key=${process.env.NEXT_PUBLIC_API_KEY}&with_genres=99",
        options
      ),
    ]);

    const [trending, topRated, popular, tvPopular, tvTopRated, documentaries] =
      await Promise.all([
        trendingRes.json(),
        topRatedRes.json(),
        popularRes.json(),
        tvPopularRes.json(),
        tvTopRatedRes.json(),
        documentariesRes.json(),
      ]);

    return {
      props: {
        trending: trending.results || [],
        topRated: topRated.results || [],
        popular: popular.results || [],
        tvPopular: tvPopular.results || [],
        tvtopRated: tvTopRated.results || [],
        documentaries: documentaries.results || [],
      },
    };
  } catch (error) {
    console.error(error);
    return {
      props: {
        session: [],
        trending: [],
        topRated: [],
        popular: [],
        tvPopular: [],
        tvtopRated: [],
        documentaries: [],
      },
    };
  }
}
