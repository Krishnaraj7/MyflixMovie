import React, { useEffect, useState } from "react";

import SeriesList from "../../components/Pages/SeriesList";
import Navbar from "../../components/Navbar";
import { Pagination } from "@mui/material";
import CustomPagination from "../../components/Pagination/CustomPagination";
import SimpleBottomNavigation from "../../components/BottomNav";
import Head from "next/head";
import { useRouter } from "next/router";
import requests from "@/utils/requests";
import Moviegenre from "../../components/Genres/Moviegenre";

const Series = ({ series,totalPages = 500 }) => {
  const [content, setContent] = useState([]);
  const [page, setPage] = useState(1);
  const [numOfPages, setNumOfPages] = useState();
   const router = useRouter();

   const fetchSeriesByGenre = async (genre) => {
     try {
      const options = {
        method: "GET",
        headers: {
          accept: "application/json",
          Authorization:
            "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTczNDlhMDRkNzE2ZWRhZGM2ZDk4OTRiY2Y4ZTUzMiIsInN1YiI6IjY0MGQ4ZjI0ZTE4ZTNmMDg0MDNhMzg3OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFAFJTiKlBfyiftvzqG6AD3kKL5r1gn0qmG3bgWr7ro",
        },
      };

      const res = await fetch(
        `https://api.themoviedb.org/3${requests[genre].seriesUrl}&page=${page}`,
        options
      );
      const data = await res.json();
      setContent(data.results);
      setNumOfPages(data.total_pages);
    } catch (error) {
      console.error(error);
    }
  };
  
  
  useEffect(() => {
    window.scroll(0, 0);
    const genre = router.query.genre || "fetchTrending";
    fetchSeriesByGenre(genre);
  }, [router.query.genre, page,]);
  

  const handleGenreChange = (genre) => {
    fetchSeriesByGenre(genre);
  };
  return (
   <>
    <Head>
          <title>Myflix-series</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/micon.ico" />
        </Head>
         <Navbar />
         
      <div className="space-y-10 md:space-y-10 mb-7  ">
      <h1 className=" text-center mt-20 text-[23px] ">
        Series
      </h1>
       <Moviegenre handleGenreChange={handleGenreChange} />
      <div className="grid grid-cols-2 gap-5 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6  items-center mt-20 lg:px-5 px-5  ">
        {content.map((series) => (
          <SeriesList
            key={series.id}
            seriesname={series.title || series.name}
            seriesPost={series.poster_path || series.backdrop_path}
            seriesid={series.id}
            seriesoverview={series.overview}
            seriesDate={series.release_date}
            seriesRating={series.vote_average}
          />
        ))}
      </div>
      {numOfPages > 1 && (
          <CustomPagination totalPages={totalPages} setPage={setPage} />
        )}
    </div>
    <div className=" mt-16">
      <SimpleBottomNavigation />
      </div>
   </>

  );
};

export default Series;
export async function getServerSideProps({ query }) {
  const options = {
    method: "GET",
    headers: {
      accept: "application/json",
      Authorization:
        "Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJmZTczNDlhMDRkNzE2ZWRhZGM2ZDk4OTRiY2Y4ZTUzMiIsInN1YiI6IjY0MGQ4ZjI0ZTE4ZTNmMDg0MDNhMzg3OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.iFAFJTiKlBfyiftvzqG6AD3kKL5r1gn0qmG3bgWr7ro",
    },
  };

  const page = query.page || 1;
  const genre = query.genre || "fetchTrending";

  try {
    const res = await fetch(
      `https://api.themoviedb.org/3${requests[genre].seriesUrl}&page=${page}`,
      options
    );
    const data = await res.json();

    return {
      props: {
        movies: data.results,
        totalPages: data.total_pages,
      },
    };
  } catch (error) {
    console.error(error);
    return {
      props: {
        movies: [],
        totalPages: 1,
      },
    };
  }
}
